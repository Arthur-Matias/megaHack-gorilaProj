{"ast":null,"code":"var _jsxFileName = \"/home/arthur/Documentos/_dev/MegaHack_Proj/megaHack-Gorila/src/pages/Registro/index.js\";\nimport React, { useState } from 'react';\nimport api from '../../services/api';\nimport validarCpf from '../../verificaCpf';\nexport default function Cadastro({\n  history\n}) {\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [email, setEmail] = useState('');\n  const [pwd, setPwd] = useState('');\n  const [tel, setTel] = useState('');\n  const [cpf, setCpf] = useState('');\n  const [birthday, setBirthday] = useState('');\n  const [sex, setSex] = useState('');\n  const [broker, setBroker] = useState(false);\n\n  function handleCpfChange() {\n    let CPF = document.querySelector('#cpf').value;\n\n    if (validarCpf.TestaCPF(CPF)) {\n      setCpf(CPF);\n    } else {\n      setCpf('');\n      alert('CPF InvÃ¡lido!!!');\n    }\n  }\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n    handleCpfChange();\n    let name = firstName + ' ' + lastName;\n    console.log(name);\n    console.log(lastName);\n    console.log(email);\n    console.log(pwd);\n    console.log(tel);\n    console.log(cpf);\n    console.log(birthday);\n    console.log(sex);\n    console.log(broker);\n\n    if (cpf !== '') {\n      const response = await api.post('/sessions', {\n        firstName,\n        lastName,\n        email,\n        pwd,\n        tel,\n        cpf,\n        birthday,\n        sex,\n        broker\n      });\n      const {\n        _id,\n        success\n      } = response.data;\n      localStorage.setItem('user', _id);\n\n      if (success) {\n        history.push('/listDashboard');\n      } else {\n        alert(\"Ocorreu um erro, tente novamente\");\n      }\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, \"Cadastro\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"firstName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }, \"Quem \\xE9 voc\\xEA\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    id: \"firstName\",\n    placeholder: \"Primeiro nome...\",\n    value: firstName,\n    onChange: event => setFirstName(event.target.value),\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    id: \"lastName\",\n    placeholder: \"Sobrenome...\",\n    value: lastName,\n    onChange: event => setLastName(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 17\n    }\n  }, \"E-Mail\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"email\",\n    id: \"email\",\n    placeholder: \"example@example.com\",\n    value: email,\n    onChange: event => setEmail(event.target.value),\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"pwd\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }\n  }, \"Senha\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    id: \"pwd\",\n    value: pwd,\n    onChange: event => setPwd(event.target.value),\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"telefone\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 17\n    }\n  }, \"Telefone\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"tel\",\n    id: \"telefone\",\n    placeholder: \"Somente numeros...\",\n    value: tel,\n    onChange: event => setTel(event.target.value),\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"birthday\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 17\n    }\n  }, \"Data de Nascimento\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"date\",\n    id: \"birthday\",\n    placeholder: \"Somente numeros...\",\n    value: birthday,\n    onChange: event => setBirthday(event.target.value),\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"cpf\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 17\n    }\n  }, \"CPF\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    id: \"cpf\",\n    placeholder: \"Somente numeros...\",\n    value: cpf,\n    onChange: event => setCpf(event.target.value),\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"sexo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 17\n    }\n  }, \"Sexo\"), /*#__PURE__*/React.createElement(\"select\", {\n    name: \"sexo\",\n    id: \"sexo\",\n    onChange: event => setSex(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    defaultValue: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 21\n    }\n  }, \"Selecione...\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"masc\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 21\n    }\n  }, \"Masculino\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"fem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 21\n    }\n  }, \"Feminino\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"nd\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 21\n    }\n  }, \"Prefiro n\\xE3o dizer\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"checkbox-corretor\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    name: \"corretor\",\n    id: \"corretor\",\n    onChange: event => setBroker(event.target.checked),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"corretor\",\n    name: \"labelCorretor\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 21\n    }\n  }, \"Sou corretor de investimentos\")), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 17\n    }\n  }, \"Entrar\")));\n}","map":{"version":3,"sources":["/home/arthur/Documentos/_dev/MegaHack_Proj/megaHack-Gorila/src/pages/Registro/index.js"],"names":["React","useState","api","validarCpf","Cadastro","history","firstName","setFirstName","lastName","setLastName","email","setEmail","pwd","setPwd","tel","setTel","cpf","setCpf","birthday","setBirthday","sex","setSex","broker","setBroker","handleCpfChange","CPF","document","querySelector","value","TestaCPF","alert","handleSubmit","event","preventDefault","name","console","log","response","post","_id","success","data","localStorage","setItem","push","target","checked"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport api from '../../services/api'\nimport validarCpf from '../../verificaCpf'\n\nexport default function Cadastro({ history }){\n    const [firstName, setFirstName] = useState('');\n    const [lastName, setLastName] = useState('');\n    const [email, setEmail] = useState('');\n    const [pwd, setPwd] = useState('');\n    const [tel, setTel] = useState('');\n    const [cpf, setCpf] = useState('');\n    const [birthday, setBirthday] = useState('');\n    const [sex, setSex] = useState('');\n    const [broker, setBroker] = useState(false);\n\n\n    function handleCpfChange(){\n        let CPF = document.querySelector('#cpf').value;\n        if(validarCpf.TestaCPF(CPF)){\n            setCpf(CPF);\n        }else{\n            setCpf('');\n            alert('CPF InvÃ¡lido!!!');\n        }\n    }\n    async function handleSubmit(event){\n        event.preventDefault();\n        handleCpfChange();\n        let name = firstName + ' ' + lastName;\n        console.log(name)\n        console.log(lastName)\n        console.log(email)\n        console.log(pwd)\n        console.log(tel)\n        console.log(cpf)\n        console.log(birthday)\n        console.log(sex)\n        console.log(broker)\n\n        \n        if (cpf !== '') {\n            const response = await api.post('/sessions', { firstName, lastName, email, pwd, tel, cpf, birthday, sex, broker });\n  \n            const { _id, success } = response.data;\n  \n            localStorage.setItem('user', _id);\n            if (success) {\n                history.push('/listDashboard')\n            }else{\n                alert(\"Ocorreu um erro, tente novamente\")\n            }\n        }        \n    }\n  \n    \n\n    return (\n        <>\n            <p>Cadastro</p>\n        \n            <form onSubmit={handleSubmit}>\n            <label htmlFor=\"firstName\">Quem Ã© vocÃª</label>\n                <input\n                    type=\"text\"\n                    id=\"firstName\"\n                    placeholder=\"Primeiro nome...\"\n                    value={firstName}\n                    onChange={event => setFirstName(event.target.value)}\n                    required\n                />\n                <input \n                    type=\"text\"\n                    id=\"lastName\"\n                    placeholder=\"Sobrenome...\"\n                    value={lastName}\n                    onChange={event => setLastName(event.target.value)}\n                />\n\n                <label htmlFor=\"email\">E-Mail</label>\n                <input \n                    type=\"email\"\n                    id=\"email\"\n                    placeholder=\"example@example.com\"\n                    value={email}\n                    onChange={event => setEmail(event.target.value)}\n                    required\n                />\n          \n                <label htmlFor=\"pwd\">Senha</label>\n                <input \n                    type=\"password\" \n                    id=\"pwd\"\n                    value={pwd}\n                    onChange={event => setPwd(event.target.value)}\n                    required\n                />\n\n                <label htmlFor=\"telefone\">Telefone</label>\n                <input \n                    type=\"tel\"\n                    id=\"telefone\"\n                    placeholder=\"Somente numeros...\"\n                    value={tel}\n                    onChange={event => setTel(event.target.value)}\n                    required\n                />\n\n                <label htmlFor=\"birthday\">Data de Nascimento</label>\n                <input \n                    type=\"date\"\n                    id=\"birthday\"\n                    placeholder=\"Somente numeros...\"\n                    value={birthday}\n                    onChange={event => setBirthday(event.target.value)}\n                    required\n                />\n\n                <label htmlFor=\"cpf\">CPF</label>\n                <input \n                    type=\"text\"\n                    id=\"cpf\"\n                    placeholder=\"Somente numeros...\"\n                    value={cpf}\n                    onChange={event => setCpf(event.target.value)}\n                    required\n                />\n\n                <label htmlFor=\"sexo\">Sexo</label>\n                <select name=\"sexo\" id=\"sexo\" onChange={event => setSex(event.target.value)}>\n                    <option defaultValue>Selecione...</option>\n                    <option value=\"masc\">Masculino</option>\n                    <option value=\"fem\">Feminino</option>\n                    <option value=\"nd\">Prefiro nÃ£o dizer</option>\n                </select>\n\n                <div className=\"checkbox-corretor\">\n                    <input \n                        type=\"checkbox\" \n                        name=\"corretor\" \n                        id=\"corretor\"\n                        onChange={event => setBroker(event.target.checked)}\n                        />\n                    <label\n                        htmlFor=\"corretor\" \n                        name='labelCorretor'\n                        >Sou corretor de investimentos</label>\n                </div>\n                <button type=\"submit\" className=\"btn\">Entrar</button>\n            </form>\n        </>\n    )\n}"]},"metadata":{},"sourceType":"module"}