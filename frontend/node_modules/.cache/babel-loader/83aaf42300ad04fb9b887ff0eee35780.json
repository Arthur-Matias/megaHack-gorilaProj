{"ast":null,"code":"var _jsxFileName = \"/Users/dede/Desktop/GorilaApp/megaHack-gorilaProj/frontend/src/pages/Registro/index.js\";\nimport React, { useState } from 'react';\nimport api from '../../services/api';\nimport validarCpf from '../../verificaCpf';\nexport default function Cadastro({\n  history\n}) {\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [email, setEmail] = useState('');\n  const [pwd, setPwd] = useState('');\n  const [phone, setPhone] = useState('');\n  const [cpf, setCpf] = useState('');\n  const [birthday, setBirthday] = useState('');\n  const [sex, setSex] = useState('');\n  const [broker, setBroker] = useState(false);\n\n  function handleCpf() {\n    let CPF = document.querySelector('#cpf').value;\n\n    if (validarCpf.TestaCPF(CPF)) {\n      setCpf(CPF);\n      return true;\n    } else {\n      setCpf('');\n      alert('CPF Inválido!!!');\n      return false;\n    }\n  }\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n    document.getElementById(\"myBtn\").disabled = true;\n    const cpf_status = handleCpf();\n\n    if (!cpf_status) {\n      history.push('/register');\n      return;\n    }\n\n    let name = firstName.trim() + ' ' + lastName.trim();\n\n    if (cpf !== '') {\n      const response = await api.post('/registerUser', {\n        name,\n        email,\n        pwd,\n        phone,\n        cpf,\n        birthday,\n        sex,\n        broker\n      });\n      const {\n        _id\n      } = response.data;\n\n      if (_id != null) {\n        localStorage.setItem('user', _id);\n        history.push('/listDashboard');\n      } else {\n        alert(\"Já existe uma conta com este e-mail ou cpf\");\n        history.push('/register');\n        return;\n      }\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, \"Cadastro\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"firstName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, \"Quem \\xE9 voc\\xEA\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    id: \"firstName\",\n    placeholder: \"Primeiro nome...\",\n    value: firstName,\n    onChange: event => setFirstName(event.target.value),\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    id: \"lastName\",\n    placeholder: \"Sobrenome...\",\n    value: lastName,\n    onChange: event => setLastName(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }\n  }, \"E-mail\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"email\",\n    id: \"email\",\n    placeholder: \"example@example.com\",\n    value: email,\n    onChange: event => setEmail(event.target.value),\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"pwd\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }\n  }, \"Senha\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    id: \"pwd\",\n    value: pwd,\n    onChange: event => setPwd(event.target.value),\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"telefone\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 17\n    }\n  }, \"Telefone\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"tel\",\n    id: \"telefone\",\n    placeholder: \"Somente numeros...\",\n    value: phone,\n    onChange: event => setPhone(event.target.value),\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"birthday\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 17\n    }\n  }, \"Data de Nascimento\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"date\",\n    id: \"birthday\",\n    value: birthday,\n    onChange: event => setBirthday(event.target.value),\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"cpf\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 17\n    }\n  }, \"CPF\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    id: \"cpf\",\n    value: cpf,\n    onChange: event => setCpf(event.target.value),\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"sexo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 17\n    }\n  }, \"Sexo\"), /*#__PURE__*/React.createElement(\"select\", {\n    name: \"sexo\",\n    id: \"sexo\",\n    onChange: event => setSex(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    defaultValue: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 21\n    }\n  }, \"Selecione...\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"masc\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 21\n    }\n  }, \"Masculino\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"fem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 21\n    }\n  }, \"Feminino\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"nd\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 21\n    }\n  }, \"Prefiro n\\xE3o dizer\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"checkbox-corretor\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    name: \"corretor\",\n    id: \"corretor\",\n    onChange: event => setBroker(event.target.checked),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"corretor\",\n    name: \"labelCorretor\",\n    id: \"labelCorretor\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 21\n    }\n  }, \"Sou corretor de investimentos\")), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn\",\n    id: \"myBtn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 17\n    }\n  }, \"Cadastrar\")));\n}","map":{"version":3,"sources":["/Users/dede/Desktop/GorilaApp/megaHack-gorilaProj/frontend/src/pages/Registro/index.js"],"names":["React","useState","api","validarCpf","Cadastro","history","firstName","setFirstName","lastName","setLastName","email","setEmail","pwd","setPwd","phone","setPhone","cpf","setCpf","birthday","setBirthday","sex","setSex","broker","setBroker","handleCpf","CPF","document","querySelector","value","TestaCPF","alert","handleSubmit","event","preventDefault","getElementById","disabled","cpf_status","push","name","trim","response","post","_id","data","localStorage","setItem","target","checked"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,GAAP,MAAgB,oBAAhB;AACA,OAAOC,UAAP,MAAuB,mBAAvB;AAEA,eAAe,SAASC,QAAT,CAAkB;AAAEC,EAAAA;AAAF,CAAlB,EAA8B;AACzC,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACO,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACW,GAAD,EAAMC,MAAN,IAAgBZ,QAAQ,CAAC,EAAD,CAA9B;AACA,QAAM,CAACa,KAAD,EAAQC,QAAR,IAAoBd,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACe,GAAD,EAAMC,MAAN,IAAgBhB,QAAQ,CAAC,EAAD,CAA9B;AACA,QAAM,CAACiB,QAAD,EAAWC,WAAX,IAA0BlB,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACmB,GAAD,EAAMC,MAAN,IAAgBpB,QAAQ,CAAC,EAAD,CAA9B;AACA,QAAM,CAACqB,MAAD,EAASC,SAAT,IAAsBtB,QAAQ,CAAC,KAAD,CAApC;;AAGA,WAASuB,SAAT,GAAoB;AAChB,QAAIC,GAAG,GAAGC,QAAQ,CAACC,aAAT,CAAuB,MAAvB,EAA+BC,KAAzC;;AACA,QAAGzB,UAAU,CAAC0B,QAAX,CAAoBJ,GAApB,CAAH,EAA4B;AACxBR,MAAAA,MAAM,CAACQ,GAAD,CAAN;AACA,aAAO,IAAP;AACH,KAHD,MAGK;AACDR,MAAAA,MAAM,CAAC,EAAD,CAAN;AACAa,MAAAA,KAAK,CAAC,iBAAD,CAAL;AACA,aAAO,KAAP;AACH;AACJ;;AACD,iBAAeC,YAAf,CAA4BC,KAA5B,EAAkC;AAC9BA,IAAAA,KAAK,CAACC,cAAN;AACAP,IAAAA,QAAQ,CAACQ,cAAT,CAAwB,OAAxB,EAAiCC,QAAjC,GAA4C,IAA5C;AACA,UAAMC,UAAU,GAAGZ,SAAS,EAA5B;;AACA,QAAG,CAACY,UAAJ,EAAe;AACX/B,MAAAA,OAAO,CAACgC,IAAR,CAAa,WAAb;AACA;AACH;;AACD,QAAIC,IAAI,GAAGhC,SAAS,CAACiC,IAAV,KAAmB,GAAnB,GAAyB/B,QAAQ,CAAC+B,IAAT,EAApC;;AAEA,QAAIvB,GAAG,KAAK,EAAZ,EAAgB;AACZ,YAAMwB,QAAQ,GAAG,MAAMtC,GAAG,CAACuC,IAAJ,CAAS,eAAT,EAA0B;AAAEH,QAAAA,IAAF;AAAQ5B,QAAAA,KAAR;AAAeE,QAAAA,GAAf;AAAoBE,QAAAA,KAApB;AAA2BE,QAAAA,GAA3B;AAAgCE,QAAAA,QAAhC;AAA0CE,QAAAA,GAA1C;AAA+CE,QAAAA;AAA/C,OAA1B,CAAvB;AACA,YAAM;AAAEoB,QAAAA;AAAF,UAASF,QAAQ,CAACG,IAAxB;;AAEA,UAAID,GAAG,IAAI,IAAX,EAAiB;AACbE,QAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BH,GAA7B;AACArC,QAAAA,OAAO,CAACgC,IAAR,CAAa,gBAAb;AACH,OAHD,MAGK;AACDP,QAAAA,KAAK,CAAC,4CAAD,CAAL;AACAzB,QAAAA,OAAO,CAACgC,IAAR,CAAa,WAAb;AACA;AACH;AACJ;AACJ;;AACD,sBACI,uDACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAGI;AAAM,IAAA,QAAQ,EAAEN,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAO,IAAA,OAAO,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADA,eAEI;AACI,IAAA,IAAI,EAAC,MADT;AAEI,IAAA,EAAE,EAAC,WAFP;AAGI,IAAA,WAAW,EAAC,kBAHhB;AAII,IAAA,KAAK,EAAEzB,SAJX;AAKI,IAAA,QAAQ,EAAE0B,KAAK,IAAIzB,YAAY,CAACyB,KAAK,CAACc,MAAN,CAAalB,KAAd,CALnC;AAMI,IAAA,QAAQ,MANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,eAUI;AACI,IAAA,IAAI,EAAC,MADT;AAEI,IAAA,EAAE,EAAC,UAFP;AAGI,IAAA,WAAW,EAAC,cAHhB;AAII,IAAA,KAAK,EAAEpB,QAJX;AAKI,IAAA,QAAQ,EAAEwB,KAAK,IAAIvB,WAAW,CAACuB,KAAK,CAACc,MAAN,CAAalB,KAAd,CALlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVJ,eAkBI;AAAO,IAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAlBJ,eAmBI;AACI,IAAA,IAAI,EAAC,OADT;AAEI,IAAA,EAAE,EAAC,OAFP;AAGI,IAAA,WAAW,EAAC,qBAHhB;AAII,IAAA,KAAK,EAAElB,KAJX;AAKI,IAAA,QAAQ,EAAEsB,KAAK,IAAIrB,QAAQ,CAACqB,KAAK,CAACc,MAAN,CAAalB,KAAd,CAL/B;AAMI,IAAA,QAAQ,MANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAnBJ,eA4BI;AAAO,IAAA,OAAO,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aA5BJ,eA6BI;AACI,IAAA,IAAI,EAAC,UADT;AAEI,IAAA,EAAE,EAAC,KAFP;AAGI,IAAA,KAAK,EAAEhB,GAHX;AAII,IAAA,QAAQ,EAAEoB,KAAK,IAAInB,MAAM,CAACmB,KAAK,CAACc,MAAN,CAAalB,KAAd,CAJ7B;AAKI,IAAA,QAAQ,MALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA7BJ,eAqCI;AAAO,IAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBArCJ,eAsCI;AACI,IAAA,IAAI,EAAC,KADT;AAEI,IAAA,EAAE,EAAC,UAFP;AAGI,IAAA,WAAW,EAAC,oBAHhB;AAII,IAAA,KAAK,EAAEd,KAJX;AAKI,IAAA,QAAQ,EAAEkB,KAAK,IAAIjB,QAAQ,CAACiB,KAAK,CAACc,MAAN,CAAalB,KAAd,CAL/B;AAMI,IAAA,QAAQ,MANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAtCJ,eA+CI;AAAO,IAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BA/CJ,eAgDI;AACI,IAAA,IAAI,EAAC,MADT;AAEI,IAAA,EAAE,EAAC,UAFP;AAGI,IAAA,KAAK,EAAEV,QAHX;AAII,IAAA,QAAQ,EAAEc,KAAK,IAAIb,WAAW,CAACa,KAAK,CAACc,MAAN,CAAalB,KAAd,CAJlC;AAKI,IAAA,QAAQ,MALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhDJ,eAwDI;AAAO,IAAA,OAAO,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAxDJ,eAyDI;AACI,IAAA,IAAI,EAAC,MADT;AAEI,IAAA,EAAE,EAAC,KAFP;AAGI,IAAA,KAAK,EAAEZ,GAHX;AAII,IAAA,QAAQ,EAAEgB,KAAK,IAAIf,MAAM,CAACe,KAAK,CAACc,MAAN,CAAalB,KAAd,CAJ7B;AAKI,IAAA,QAAQ,MALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAzDJ,eAiEI;AAAO,IAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAjEJ,eAkEI;AAAQ,IAAA,IAAI,EAAC,MAAb;AAAoB,IAAA,EAAE,EAAC,MAAvB;AAA8B,IAAA,QAAQ,EAAEI,KAAK,IAAIX,MAAM,CAACW,KAAK,CAACc,MAAN,CAAalB,KAAd,CAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAQ,IAAA,YAAY,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAQ,IAAA,KAAK,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFJ,eAGI;AAAQ,IAAA,KAAK,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII;AAAQ,IAAA,KAAK,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAJJ,CAlEJ,eAyEI;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AACI,IAAA,IAAI,EAAC,UADT;AAEI,IAAA,IAAI,EAAC,UAFT;AAGI,IAAA,EAAE,EAAC,UAHP;AAII,IAAA,QAAQ,EAAEI,KAAK,IAAIT,SAAS,CAACS,KAAK,CAACc,MAAN,CAAaC,OAAd,CAJhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAOI;AACI,IAAA,OAAO,EAAC,UADZ;AAEI,IAAA,IAAI,EAAC,eAFT;AAGI,IAAA,EAAE,EAAC,eAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAPJ,CAzEJ,eAsFI;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,SAAS,EAAC,KAAhC;AAAsC,IAAA,EAAE,EAAC,OAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAtFJ,CAHJ,CADJ;AA8FH","sourcesContent":["import React, { useState } from 'react';\nimport api from '../../services/api'\nimport validarCpf from '../../verificaCpf'\n\nexport default function Cadastro({ history }){\n    const [firstName, setFirstName] = useState('');\n    const [lastName, setLastName] = useState('');\n    const [email, setEmail] = useState('');\n    const [pwd, setPwd] = useState('');\n    const [phone, setPhone] = useState('');\n    const [cpf, setCpf] = useState('');\n    const [birthday, setBirthday] = useState('');\n    const [sex, setSex] = useState('');\n    const [broker, setBroker] = useState(false);\n\n\n    function handleCpf(){\n        let CPF = document.querySelector('#cpf').value;\n        if(validarCpf.TestaCPF(CPF)){\n            setCpf(CPF);\n            return true;\n        }else{\n            setCpf('');\n            alert('CPF Inválido!!!');\n            return false\n        }\n    }\n    async function handleSubmit(event){\n        event.preventDefault();\n        document.getElementById(\"myBtn\").disabled = true;\n        const cpf_status = handleCpf();\n        if(!cpf_status){\n            history.push('/register')\n            return;\n        }\n        let name = firstName.trim() + ' ' + lastName.trim();\n        \n        if (cpf !== '') {\n            const response = await api.post('/registerUser', { name, email, pwd, phone, cpf, birthday, sex, broker });\n            const { _id} = response.data;\n  \n            if (_id != null) {\n                localStorage.setItem('user', _id);\n                history.push('/listDashboard')\n            }else{\n                alert(\"Já existe uma conta com este e-mail ou cpf\");\n                history.push('/register')\n                return;\n            }\n        }        \n    }\n    return (\n        <>\n            <p>Cadastro</p>\n        \n            <form onSubmit={handleSubmit}>\n            <label htmlFor=\"firstName\">Quem é você</label>\n                <input\n                    type=\"text\"\n                    id=\"firstName\"\n                    placeholder=\"Primeiro nome...\"\n                    value={firstName}\n                    onChange={event => setFirstName(event.target.value)}\n                    required\n                />\n                <input \n                    type=\"text\"\n                    id=\"lastName\"\n                    placeholder=\"Sobrenome...\"\n                    value={lastName}\n                    onChange={event => setLastName(event.target.value)}\n                />\n\n                <label htmlFor=\"email\">E-mail</label>\n                <input \n                    type=\"email\"\n                    id=\"email\"\n                    placeholder=\"example@example.com\"\n                    value={email}\n                    onChange={event => setEmail(event.target.value)}\n                    required\n                />\n          \n                <label htmlFor=\"pwd\">Senha</label>\n                <input \n                    type=\"password\" \n                    id=\"pwd\"\n                    value={pwd}\n                    onChange={event => setPwd(event.target.value)}\n                    required\n                />\n\n                <label htmlFor=\"telefone\">Telefone</label>\n                <input \n                    type=\"tel\"\n                    id=\"telefone\"\n                    placeholder=\"Somente numeros...\"\n                    value={phone}\n                    onChange={event => setPhone(event.target.value)}\n                    required\n                />\n\n                <label htmlFor=\"birthday\">Data de Nascimento</label>\n                <input \n                    type=\"date\"\n                    id=\"birthday\"\n                    value={birthday}\n                    onChange={event => setBirthday(event.target.value)}\n                    required\n                />\n\n                <label htmlFor=\"cpf\">CPF</label>\n                <input \n                    type=\"text\"\n                    id=\"cpf\"\n                    value={cpf}\n                    onChange={event => setCpf(event.target.value)}\n                    required\n                />\n\n                <label htmlFor=\"sexo\">Sexo</label>\n                <select name=\"sexo\" id=\"sexo\" onChange={event => setSex(event.target.value)}>\n                    <option defaultValue>Selecione...</option>\n                    <option value=\"masc\">Masculino</option>\n                    <option value=\"fem\">Feminino</option>\n                    <option value=\"nd\">Prefiro não dizer</option>\n                </select>\n\n                <div className=\"checkbox-corretor\">\n                    <input \n                        type=\"checkbox\" \n                        name=\"corretor\" \n                        id=\"corretor\"\n                        onChange={event => setBroker(event.target.checked)}\n                        />\n                    <label\n                        htmlFor=\"corretor\" \n                        name='labelCorretor'\n                        id='labelCorretor'\n                        >Sou corretor de investimentos</label>\n                </div>\n                <button type=\"submit\" className=\"btn\" id='myBtn'>Cadastrar</button>\n            </form>\n        </>\n    )\n}"]},"metadata":{},"sourceType":"module"}